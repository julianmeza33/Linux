import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'User Info',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  bool isLoading = false;
  User? user;

  Future<void> _handleSearch() async {
    setState(() => isLoading = true);
    var url = Uri.https('jsonplaceholder.typicode.com', '/users/2');

    try {
      var response = await http.get(url);
      if (response.statusCode == 200) {
        user = User.fromJson(jsonDecode(response.body));
      } else {
        throw Exception('Error al cargar los datos');
      }
    } catch (e) {
      print('Error: $e');
    } finally {
      setState(() => isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('User Info')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            if (isLoading) Center(child: CircularProgressIndicator()),
            if (!isLoading && user != null) UserInfo(user: user!),
            SizedBox(height: 20),
            ElevatedButton(onPressed: _handleSearch, child: Text('Buscar')),
          ],
        ),
      ),
    );
  }
}

class UserInfo extends StatelessWidget {
  final User user;

  const UserInfo({required this.user});

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text('USER', style: TextStyle(color: Colors.blue)),
        Text('ID: ${user.id}'),
        Text('Name: ${user.name}'),
        Text('Username: ${user.username}'),
        Text('Email: ${user.email}'),
      ],
    );
  }
}

class User {
  final int id;
  final String name;
  final String username;
  final String email;

  User(
      {required this.id,
      required this.name,
      required this.username,
      required this.email});

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      id: json['id'],
      name: json['name'],
      username: json['username'],
      email: json['email'],
    );
  }
}
